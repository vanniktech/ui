// Signature format: 4.0
package com.vanniktech.ui {

  public final class AndroidActivityKt {
    method public static android.app.Activity? asActivityOrNull(android.content.Context);
  }

  public final class AndroidAnimationKt {
    method public static inline void animate(android.view.ViewGroup, kotlin.jvm.functions.Function0<kotlin.Unit> body);
    method public static inline void animate(android.view.ViewGroup, kotlin.jvm.functions.Function0<kotlin.Unit> body, kotlin.jvm.functions.Function0<kotlin.Unit> onEndListener);
    method public static void animateBackgroundColor(android.view.View, int color, optional long speed);
    method public static void animateText(android.widget.TextView, String? text);
    method public static void animateTextColor(android.widget.TextView, int color, optional long speed);
    method public static void animateTint(android.widget.ImageView, int to, optional android.graphics.PorterDuff.Mode mode, optional long speed);
    method public static void animateToGone(android.view.View, optional long duration, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onEnd);
    method public static void animateToVisible(android.view.View, optional long duration, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onEnd);
    method public static void flash(android.view.View, int from, int to);
    field public static final long DEFAULT_ANIMATION_DURATION = 300L; // 0x12cL
  }

  public final class AndroidColorKt {
    method public static android.graphics.drawable.ColorDrawable ColorDrawable(int color);
    method public static android.content.res.ColorStateList colorStateList(int);
    method public static android.content.res.ColorStateList colorStateList(int state, int on, int off);
    method public static android.text.SpannableString? coloredText(int, CharSequence? text);
    method public static void setBackgroundColor(android.view.View, int color);
    method public static void setCardBackgroundColor(androidx.cardview.widget.CardView, int color);
    method public static void setColor(android.graphics.Paint, int color);
    method public static androidx.core.app.NotificationCompat.Builder setColor(androidx.core.app.NotificationCompat.Builder, int color);
    method public static void setTextColor(android.widget.TextView, int color);
    method public static void setTextSizeSp(android.widget.TextView, float sp);
    method public static void tintIcon(android.widget.ImageView, int color, optional android.graphics.PorterDuff.Mode mode);
  }

  public final class AndroidDialogKt {
    method public static androidx.appcompat.app.AlertDialog show(com.google.android.material.dialog.MaterialAlertDialogBuilder, int background, int colorRipple, int colorButton);
  }

  public final class AndroidEditTextExtensionsKt {
    method public static void cursorAtEnd(android.widget.EditText);
    method public static void hideKeyboard(android.app.Activity);
    method public static void hideKeyboard(android.content.Context, android.view.View view);
    method public static void hideKeyboardAndFocus(android.widget.EditText);
    method public static void showKeyboardAndFocus(android.widget.EditText);
  }

  public final class AndroidGoodiesKt {
    method public static com.vanniktech.ui.Color? backgroundColor(android.view.View);
    method public static java.util.List<android.view.View> children(android.view.ViewGroup);
    method public static void clearAppend(android.widget.TextView, String? text);
    method public static void click(android.view.View);
    method public static android.view.ViewGroup parentViewGroup(android.view.View);
    method public static void setText(androidx.appcompat.app.ActionBar, CharSequence? string);
    method @Px public static float setTextSizeRes(android.widget.TextView, @DimenRes int value, optional float factor);
    method public static void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton, boolean isVisible);
    method public static void show(com.google.android.material.floatingactionbutton.FloatingActionButton, boolean isVisible);
    method public static void visibleElse(android.view.View, boolean isVisible, int other);
    method public static void visibleGone(android.view.View, boolean isVisible);
    method public static void visibleInvisible(android.view.View, boolean isVisible);
  }

  public final class AndroidMenuKt {
    method public static void themeMenu(android.view.Menu, int color, int subMenuColor);
  }

  public final class AndroidRecyclerViewExtensionsKt {
    method public static void allowNestedVerticalScrolling(androidx.recyclerview.widget.RecyclerView);
    method public static void scrollBefore(androidx.recyclerview.widget.RecyclerView);
    method public static void scrollNext(androidx.recyclerview.widget.RecyclerView);
    method public static void scrollToBottom(androidx.recyclerview.widget.RecyclerView);
    method public static void scrollToTop(androidx.recyclerview.widget.RecyclerView);
    method public static void smoothScrollTo(androidx.recyclerview.widget.RecyclerView, int position, optional int scrollDuration, optional kotlin.jvm.functions.Function1<? super android.view.View,kotlin.Unit> onTargetFound);
  }

  public final class AndroidThemingHacksKt {
    method public static android.graphics.drawable.Drawable tinted(android.graphics.drawable.Drawable, int color);
  }

  public final class AndroidViewKt {
    method public static void themeBottomNavigationView(com.google.android.material.bottomnavigation.BottomNavigationView, int colorBackground, int colorOnBackground, int colorOnBackgroundSecondary, int colorRipple);
    method public static void themeButton(com.google.android.material.button.MaterialButton, int colorBackground, int colorBackgroundDisabled, int colorText, int colorTextDisabled, int colorRipple);
    method public static void themeCheckBox(android.widget.CheckBox, int color, int colorText, int colorTextSecondary);
    method public static void themeChip(com.google.android.material.chip.Chip, int colorBackground, int colorBackgroundSelected, int colorText, int colorTextSelected, int colorRipple);
    method public static void themeEditText(android.widget.EditText, int color, int colorText, int colorTextSecondary);
    method public static void themeExtendedFloatingActionButton(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton, int color, int colorOn, int colorRipple);
    method public static void themeFloatingActionButton(com.google.android.material.floatingactionbutton.FloatingActionButton, int color, int colorOn, int colorRipple);
    method public static void themeMaterialAutoCompleteTextView(com.google.android.material.textfield.MaterialAutoCompleteTextView, int color, int colorText, int colorTextSecondary, int colorRipple, int colorDropDownBackground);
    method public static void themeOutlineButton(com.google.android.material.button.MaterialButton, int color, int colorDisabled, int colorRipple);
    method public static void themeProgressBar(android.widget.ProgressBar, int color);
    method public static void themeRadioButton(android.widget.RadioButton, int color, int colorText, int colorTextSecondary);
    method public static void themeRecyclerView(androidx.recyclerview.widget.RecyclerView, int color);
    method public static void themeSeekBar(android.widget.SeekBar, int color);
    method public static void themeSwipeRefreshLayout(androidx.swiperefreshlayout.widget.SwipeRefreshLayout, int color, int backgroundColor);
    method public static void themeTabLayout(com.google.android.material.tabs.TabLayout, int colorToolbar, int colorOnToolbar, int colorOnToolbarSecondary, int colorRipple);
    method public static void themeTextButton(com.google.android.material.button.MaterialButton, int color, int colorDisabled, int colorRipple);
    method public static void themeTextInputLayout(com.google.android.material.textfield.TextInputLayout, int colorText, int colorError, int colorBoxPrimary, int colorBoxSecondary);
    method public static void themeTextView(android.widget.TextView, int color, int colorText, int colorTextSecondary);
    method public static void themeToggleButton(com.google.android.material.button.MaterialButton, int color, int colorUnchecked, int colorRipple);
    method public static void themeToolbar(com.google.android.material.appbar.MaterialToolbar, int colorToolbar, int colorOnToolbar, int colorOnToolbarSecondary);
    method public static void themeViewPager(androidx.viewpager.widget.ViewPager, int color);
    method public static void themeWebView(android.webkit.WebView, int backgroundColor, boolean isNight);
  }

  public final class AndroidWindowKt {
    method public static void themeWindow(android.view.Window, int statusBarColor, int navigationBarColor, boolean lightNavigationBars, boolean lightStatusBars);
  }

  @kotlin.jvm.JvmInline @kotlinx.parcelize.Parcelize @kotlinx.serialization.Serializable(with=ColorSerializer::class) public final value class Color implements com.vanniktech.ui.Parcelable {
    ctor public Color(int argb);
    method public int brighten(float factor);
    method public int copy(optional int alpha, optional int red, optional int green, optional int blue);
    method public int copy(optional float alpha, optional float red, optional float green, optional float blue);
    method public int getArgb();
    method public String htmlRgbaString();
    method public boolean shouldUseBlackFont();
    method @Deprecated public int with(float alpha);
    method @Deprecated public int with(int alpha);
    property public final int argb;
    field public static final com.vanniktech.ui.Color.Companion Companion;
  }

  public static final class Color.Companion {
    method public int fromArgb(int alpha, int red, int green, int blue);
    method public com.vanniktech.ui.Color? fromHexOrNull(String hex);
    method public int getBLACK();
    method public int getTRANSPARENT();
    method public int getUNTINTED();
    method public int getWHITE();
    property public final int BLACK;
    property public final int TRANSPARENT;
    property public final int UNTINTED;
    property public final int WHITE;
  }

  public final class ColorKt {
    method public static int getColor(int);
    method public static int getColor(long);
  }

  public final class ColorSerializer implements kotlinx.serialization.KSerializer<com.vanniktech.ui.Color> {
    method public int deserialize(kotlinx.serialization.encoding.Decoder decoder);
    method public kotlinx.serialization.descriptors.SerialDescriptor getDescriptor();
    method public void serialize(kotlinx.serialization.encoding.Encoder encoder, int value);
    property public kotlinx.serialization.descriptors.SerialDescriptor descriptor;
    field public static final com.vanniktech.ui.ColorSerializer INSTANCE;
  }

  public final class CommonParcelableAndroidApiKt {
  }

  public enum MaterialColor {
    method public final int getColor400();
    method public final int getColor500();
    method public final int getColor800();
    method public final int getColorToolbar();
    method public static com.vanniktech.ui.MaterialColor valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static com.vanniktech.ui.MaterialColor[] values();
    property public final int color400;
    property public final int color500;
    property public final int color800;
    property public final int colorToolbar;
    enum_constant public static final com.vanniktech.ui.MaterialColor AMBER;
    enum_constant public static final com.vanniktech.ui.MaterialColor BLUE;
    enum_constant public static final com.vanniktech.ui.MaterialColor BLUE_GRAY;
    enum_constant public static final com.vanniktech.ui.MaterialColor BLUE_LIGHT;
    enum_constant public static final com.vanniktech.ui.MaterialColor BROWN;
    enum_constant public static final com.vanniktech.ui.MaterialColor CYAN;
    enum_constant public static final com.vanniktech.ui.MaterialColor GRAY;
    enum_constant public static final com.vanniktech.ui.MaterialColor GREEN;
    enum_constant public static final com.vanniktech.ui.MaterialColor GREEN_LIGHT;
    enum_constant public static final com.vanniktech.ui.MaterialColor INDIGO;
    enum_constant public static final com.vanniktech.ui.MaterialColor LIME;
    enum_constant public static final com.vanniktech.ui.MaterialColor ORANGE;
    enum_constant public static final com.vanniktech.ui.MaterialColor ORANGE_DEEP;
    enum_constant public static final com.vanniktech.ui.MaterialColor PINK;
    enum_constant public static final com.vanniktech.ui.MaterialColor PURPLE;
    enum_constant public static final com.vanniktech.ui.MaterialColor PURPLE_DEEP;
    enum_constant public static final com.vanniktech.ui.MaterialColor RED;
    enum_constant public static final com.vanniktech.ui.MaterialColor TEAL;
    enum_constant public static final com.vanniktech.ui.MaterialColor YELLOW;
  }

  public interface Parcelable {
  }

  public interface Parcelable {
  }

}

package com.vanniktech.ui.theming {

  public final class ThemingColor {
    ctor public ThemingColor(int light, int dark);
    method public int component1-oEAH0UE();
    method public int component2-oEAH0UE();
    method public com.vanniktech.ui.theming.ThemingColor copy-NnySmFY(int light, int dark);
    method public int getDark();
    method public int getLight();
    method public int mapped(boolean isNight);
    method public com.vanniktech.ui.theming.ThemingColor with(float alpha);
    property public final int dark;
    property public final int light;
    field public static final com.vanniktech.ui.theming.ThemingColor.Companion Companion;
  }

  public static final class ThemingColor.Companion {
    method public com.vanniktech.ui.theming.ThemingColor single(int color);
  }

}

package com.vanniktech.ui.theming.night {

  public final class AndroidNightModeBehaviorHandler implements com.vanniktech.ui.theming.night.NightModeBehaviorHandler {
    method public void updateBehavior(com.vanniktech.ui.theming.night.NightModeBehavior nightModeBehavior);
    field public static final com.vanniktech.ui.theming.night.AndroidNightModeBehaviorHandler INSTANCE;
  }

  public final class ContextNightModeProvider implements com.vanniktech.ui.theming.night.NightModeProvider {
    ctor public ContextNightModeProvider(android.content.Context context);
    method public boolean isNightMode();
  }

  public final class HardcodedNightModeProvider implements com.vanniktech.ui.theming.night.NightModeProvider {
    ctor public HardcodedNightModeProvider(boolean isNightMode);
    method public boolean isNightMode();
  }

  public enum NightModeBehavior {
    method public final int getValue();
    method public static com.vanniktech.ui.theming.night.NightModeBehavior valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static com.vanniktech.ui.theming.night.NightModeBehavior[] values();
    property public final int value;
    enum_constant public static final com.vanniktech.ui.theming.night.NightModeBehavior FOLLOW_SYSTEM;
    enum_constant public static final com.vanniktech.ui.theming.night.NightModeBehavior NO;
    enum_constant public static final com.vanniktech.ui.theming.night.NightModeBehavior YES;
    field public static final com.vanniktech.ui.theming.night.NightModeBehavior.Companion Companion;
  }

  public static final class NightModeBehavior.Companion {
    method public com.vanniktech.ui.theming.night.NightModeBehavior? fromOrNull(Integer? value);
    method public java.util.List<com.vanniktech.ui.theming.night.NightModeBehavior> list();
  }

  public interface NightModeBehaviorHandler {
    method public void updateBehavior(com.vanniktech.ui.theming.night.NightModeBehavior nightModeBehavior);
  }

  public interface NightModeProvider {
    method public boolean isNightMode();
  }

  public final class NoOpNightModeBehaviorHandler implements com.vanniktech.ui.theming.night.NightModeBehaviorHandler {
    method public void updateBehavior(com.vanniktech.ui.theming.night.NightModeBehavior nightModeBehavior);
    field public static final com.vanniktech.ui.theming.night.NoOpNightModeBehaviorHandler INSTANCE;
  }

}

